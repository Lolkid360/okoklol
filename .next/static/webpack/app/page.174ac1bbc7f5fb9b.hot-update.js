"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./components/ImageUploader.tsx":
/*!**************************************!*\
  !*** ./components/ImageUploader.tsx ***!
  \**************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ ImageUploader; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\nvar _s = $RefreshSig$();\n\nfunction ImageUploader(param) {\n    let { onSelect, onResult, imageUrl } = param;\n    _s();\n    const [isProcessing, setIsProcessing] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const processImage = async (source)=>{\n        if (!onResult) return;\n        setIsProcessing(true);\n        onResult({\n            text: \"Starting...\",\n            language: \"auto\",\n            isLoading: true\n        });\n        try {\n            // If source is a URL, fetch it first to handle CORS\n            let imageSource = source;\n            let imageBlobUrl = \"\";\n            if (typeof source === \"string\" && source.startsWith(\"http\")) {\n                onResult({\n                    text: \"Fetching image...\",\n                    language: \"auto\",\n                    isLoading: true\n                });\n                const response = await fetch(\"/api/fetch-images/proxy?url=\" + encodeURIComponent(source));\n                if (!response.ok) throw new Error(\"Failed to fetch image\");\n                const blob = await response.blob();\n                imageBlobUrl = URL.createObjectURL(blob);\n                imageSource = imageBlobUrl;\n            } else if (source instanceof File) {\n                imageBlobUrl = URL.createObjectURL(source);\n                imageSource = imageBlobUrl;\n            } else {\n                imageBlobUrl = source;\n                imageSource = source;\n            }\n            onResult({\n                text: \"Loading OCR engine...\",\n                language: \"auto\",\n                isLoading: true\n            });\n            const { createWorker } = await __webpack_require__.e(/*! import() */ \"_app-pages-browser_node_modules_tesseract_js_src_index_js\").then(__webpack_require__.t.bind(__webpack_require__, /*! tesseract.js */ \"(app-pages-browser)/./node_modules/tesseract.js/src/index.js\", 23));\n            // Use Korean + Japanese + English for comprehensive detection\n            console.log(\"Creating multi-language Tesseract worker...\");\n            const worker = await createWorker(\"kor+jpn+eng\");\n            console.log(\"Processing image with OCR...\");\n            const ret = await worker.recognize(imageSource);\n            console.log(\"OCR processing complete\");\n            // Extract bounding boxes with text\n            const boundingBoxes = [];\n            const words = ret.data.words || [];\n            for (const word of words){\n                if (word.text.trim() && word.confidence > 30) {\n                    boundingBoxes.push({\n                        x: word.bbox.x0,\n                        y: word.bbox.y0,\n                        width: word.bbox.x1 - word.bbox.x0,\n                        height: word.bbox.y1 - word.bbox.y0,\n                        text: word.text\n                    });\n                }\n            }\n            console.log(\"Detected \".concat(boundingBoxes.length, \" text regions\"));\n            // Batch translate all text in a single API call\n            if (boundingBoxes.length > 0) {\n                onResult({\n                    text: \"Translating \".concat(boundingBoxes.length, \" text regions...\"),\n                    language: \"auto\",\n                    isLoading: true,\n                    boundingBoxes,\n                    imageUrl: imageBlobUrl\n                });\n                try {\n                    // Combine all text with markers to maintain mapping\n                    const combinedText = boundingBoxes.map((box, i)=>\"[\".concat(i, \"] \").concat(box.text)).join(\"\\n\");\n                    const response = await fetch(\"/api/translate\", {\n                        method: \"POST\",\n                        headers: {\n                            \"Content-Type\": \"application/json\"\n                        },\n                        body: JSON.stringify({\n                            text: combinedText,\n                            sourceLang: \"Korean/Japanese\",\n                            isBatch: true,\n                            count: boundingBoxes.length\n                        })\n                    });\n                    if (response.ok) {\n                        const data = await response.json();\n                        const translations = data.translations || [];\n                        // Create a map for quick lookups\n                        const translationMap = new Map(translations.map((t)=>[\n                                t.index,\n                                t.text\n                            ]));\n                        // Update bounding boxes with translated text\n                        boundingBoxes.forEach((box, i)=>{\n                            if (translationMap.has(i)) {\n                                box.translatedText = translationMap.get(i);\n                            }\n                        });\n                    } else {\n                        // Fallback to original text\n                        boundingBoxes.forEach((box)=>{\n                            box.translatedText = box.text;\n                        });\n                    }\n                } catch (err) {\n                    console.error(\"Translation error:\", err);\n                    // Fallback to original text\n                    boundingBoxes.forEach((box)=>{\n                        box.translatedText = box.text;\n                    });\n                }\n            }\n            await worker.terminate();\n            const fullText = boundingBoxes.map((b)=>b.text).join(\" \");\n            const translatedFullText = boundingBoxes.map((b)=>b.translatedText || b.text).join(\" \");\n            onResult({\n                text: translatedFullText || \"No text detected\",\n                language: \"kor+jpn+eng\",\n                isLoading: false,\n                boundingBoxes,\n                imageUrl: imageBlobUrl\n            });\n        } catch (err) {\n            console.error(\"Image processing error:\", err);\n            onResult({\n                text: \"Error: \".concat((err === null || err === void 0 ? void 0 : err.message) || \"Unknown error\"),\n                language: \"eng\",\n                isLoading: false\n            });\n        } finally{\n            setIsProcessing(false);\n        }\n    };\n    // Process imageUrl when it changes\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (imageUrl) {\n            processImage(imageUrl);\n        }\n    }, [\n        imageUrl\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"relative\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                className: \"flex items-center gap-2\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                        className: \"text-gray-800\",\n                        children: \"Upload image\"\n                    }, void 0, false, {\n                        fileName: \"/home/user/okoklol/components/ImageUploader.tsx\",\n                        lineNumber: 170,\n                        columnNumber: 9\n                    }, this),\n                    isProcessing && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                        className: \"text-blue-600 animate-pulse\",\n                        children: \"(Processing...)\"\n                    }, void 0, false, {\n                        fileName: \"/home/user/okoklol/components/ImageUploader.tsx\",\n                        lineNumber: 172,\n                        columnNumber: 11\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/home/user/okoklol/components/ImageUploader.tsx\",\n                lineNumber: 169,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"mt-2\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                    className: \"flex justify-center w-full h-32 px-4 transition border-2 border-gray-300 border-dashed rounded-lg appearance-none cursor-pointer hover:border-blue-500 focus:outline-none\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"flex flex-col items-center justify-center pt-5 pb-6\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                    className: \"w-8 h-8 text-gray-400\",\n                                    fill: \"none\",\n                                    stroke: \"currentColor\",\n                                    viewBox: \"0 0 24 24\",\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                        strokeLinecap: \"round\",\n                                        strokeLinejoin: \"round\",\n                                        strokeWidth: \"2\",\n                                        d: \"M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12\"\n                                    }, void 0, false, {\n                                        fileName: \"/home/user/okoklol/components/ImageUploader.tsx\",\n                                        lineNumber: 179,\n                                        columnNumber: 15\n                                    }, this)\n                                }, void 0, false, {\n                                    fileName: \"/home/user/okoklol/components/ImageUploader.tsx\",\n                                    lineNumber: 178,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                    className: \"pt-1 text-sm text-gray-600\",\n                                    children: \"Drop an image or click to select\"\n                                }, void 0, false, {\n                                    fileName: \"/home/user/okoklol/components/ImageUploader.tsx\",\n                                    lineNumber: 181,\n                                    columnNumber: 13\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/home/user/okoklol/components/ImageUploader.tsx\",\n                            lineNumber: 177,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                            type: \"file\",\n                            accept: \"image/*\",\n                            className: \"hidden\",\n                            disabled: isProcessing,\n                            onChange: (e)=>{\n                                var _e_target_files;\n                                const f = (_e_target_files = e.target.files) === null || _e_target_files === void 0 ? void 0 : _e_target_files[0];\n                                if (f) {\n                                    onSelect(f);\n                                    processImage(f);\n                                }\n                            }\n                        }, void 0, false, {\n                            fileName: \"/home/user/okoklol/components/ImageUploader.tsx\",\n                            lineNumber: 185,\n                            columnNumber: 11\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/home/user/okoklol/components/ImageUploader.tsx\",\n                    lineNumber: 176,\n                    columnNumber: 9\n                }, this)\n            }, void 0, false, {\n                fileName: \"/home/user/okoklol/components/ImageUploader.tsx\",\n                lineNumber: 175,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/home/user/okoklol/components/ImageUploader.tsx\",\n        lineNumber: 168,\n        columnNumber: 5\n    }, this);\n}\n_s(ImageUploader, \"6Clvrzr1weHbvefu1tuIQv0H2zs=\");\n_c = ImageUploader;\nvar _c;\n$RefreshReg$(_c, \"ImageUploader\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/ImageUploader.tsx\n"));

/***/ })

});