"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./components/TranslatedImageOverlay.tsx":
/*!***********************************************!*\
  !*** ./components/TranslatedImageOverlay.tsx ***!
  \***********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ TranslatedImageOverlay; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\nvar _s = $RefreshSig$();\n\nfunction TranslatedImageOverlay(param) {\n    let { imageUrl, boundingBoxes, showOriginal = false } = param;\n    _s();\n    const canvasRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const [imageLoaded, setImageLoaded] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [imageDimensions, setImageDimensions] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        width: 0,\n        height: 0\n    });\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (!imageUrl || !canvasRef.current) return;\n        const canvas = canvasRef.current;\n        const ctx = canvas.getContext(\"2d\");\n        if (!ctx) return;\n        const img = new Image();\n        img.crossOrigin = \"anonymous\";\n        img.onload = ()=>{\n            // Set canvas size to match image\n            canvas.width = img.width;\n            canvas.height = img.height;\n            setImageDimensions({\n                width: img.width,\n                height: img.height\n            });\n            // Draw the original image\n            ctx.drawImage(img, 0, 0);\n            if (!showOriginal && boundingBoxes.length > 0) {\n                // Overlay translated text\n                boundingBoxes.forEach((box)=>{\n                    if (box.translatedText) {\n                        // Fill the original text area with white to mask it\n                        ctx.fillStyle = \"rgba(255, 255, 255, 0.95)\";\n                        ctx.fillRect(box.x, box.y, box.width, box.height);\n                        // Draw translated text\n                        const fontSize = Math.max(12, Math.min(box.height * 0.7, 24));\n                        ctx.font = \"\".concat(fontSize, \"px Arial, sans-serif\");\n                        ctx.fillStyle = \"black\";\n                        ctx.textBaseline = \"top\";\n                        // Word wrap the text if it's too long\n                        const words = box.translatedText.split(\" \");\n                        let line = \"\";\n                        let yOffset = box.y + 2;\n                        const lineHeight = fontSize * 1.2;\n                        const maxWidth = box.width - 4;\n                        for(let i = 0; i < words.length; i++){\n                            const testLine = line + words[i] + \" \";\n                            const metrics = ctx.measureText(testLine);\n                            if (metrics.width > maxWidth && i > 0) {\n                                ctx.fillText(line, box.x + 2, yOffset);\n                                line = words[i] + \" \";\n                                yOffset += lineHeight;\n                            } else {\n                                line = testLine;\n                            }\n                        }\n                        ctx.fillText(line, box.x + 2, yOffset);\n                    }\n                });\n            }\n            setImageLoaded(true);\n        };\n        img.onerror = ()=>{\n            console.error(\"Failed to load image for overlay\");\n        };\n        img.src = imageUrl;\n    }, [\n        imageUrl,\n        boundingBoxes,\n        showOriginal\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"relative w-full h-full flex items-center justify-center bg-gray-100\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"canvas\", {\n                ref: canvasRef,\n                className: \"max-w-full max-h-full object-contain\",\n                style: {\n                    display: imageLoaded ? \"block\" : \"none\"\n                }\n            }, void 0, false, {\n                fileName: \"/home/user/okoklol/components/TranslatedImageOverlay.tsx\",\n                lineNumber: 92,\n                columnNumber: 7\n            }, this),\n            !imageLoaded && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"text-black\",\n                children: \"Loading image...\"\n            }, void 0, false, {\n                fileName: \"/home/user/okoklol/components/TranslatedImageOverlay.tsx\",\n                lineNumber: 98,\n                columnNumber: 9\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/home/user/okoklol/components/TranslatedImageOverlay.tsx\",\n        lineNumber: 91,\n        columnNumber: 5\n    }, this);\n}\n_s(TranslatedImageOverlay, \"wVsqVVA7O7UEd1gQuEyGemtrNKg=\");\n_c = TranslatedImageOverlay;\nvar _c;\n$RefreshReg$(_c, \"TranslatedImageOverlay\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2NvbXBvbmVudHMvVHJhbnNsYXRlZEltYWdlT3ZlcmxheS50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQTBEO0FBaUIzQyxTQUFTSSx1QkFBdUIsS0FBd0Q7UUFBeEQsRUFBRUMsUUFBUSxFQUFFQyxhQUFhLEVBQUVDLGVBQWUsS0FBSyxFQUFTLEdBQXhEOztJQUM3QyxNQUFNQyxZQUFZTiw2Q0FBTUEsQ0FBb0I7SUFDNUMsTUFBTSxDQUFDTyxhQUFhQyxlQUFlLEdBQUdQLCtDQUFRQSxDQUFDO0lBQy9DLE1BQU0sQ0FBQ1EsaUJBQWlCQyxtQkFBbUIsR0FBR1QsK0NBQVFBLENBQUM7UUFBRVUsT0FBTztRQUFHQyxRQUFRO0lBQUU7SUFFN0ViLGdEQUFTQSxDQUFDO1FBQ1IsSUFBSSxDQUFDSSxZQUFZLENBQUNHLFVBQVVPLE9BQU8sRUFBRTtRQUVyQyxNQUFNQyxTQUFTUixVQUFVTyxPQUFPO1FBQ2hDLE1BQU1FLE1BQU1ELE9BQU9FLFVBQVUsQ0FBQztRQUM5QixJQUFJLENBQUNELEtBQUs7UUFFVixNQUFNRSxNQUFNLElBQUlDO1FBQ2hCRCxJQUFJRSxXQUFXLEdBQUc7UUFFbEJGLElBQUlHLE1BQU0sR0FBRztZQUNYLGlDQUFpQztZQUNqQ04sT0FBT0gsS0FBSyxHQUFHTSxJQUFJTixLQUFLO1lBQ3hCRyxPQUFPRixNQUFNLEdBQUdLLElBQUlMLE1BQU07WUFDMUJGLG1CQUFtQjtnQkFBRUMsT0FBT00sSUFBSU4sS0FBSztnQkFBRUMsUUFBUUssSUFBSUwsTUFBTTtZQUFDO1lBRTFELDBCQUEwQjtZQUMxQkcsSUFBSU0sU0FBUyxDQUFDSixLQUFLLEdBQUc7WUFFdEIsSUFBSSxDQUFDWixnQkFBZ0JELGNBQWNrQixNQUFNLEdBQUcsR0FBRztnQkFDN0MsMEJBQTBCO2dCQUMxQmxCLGNBQWNtQixPQUFPLENBQUNDLENBQUFBO29CQUNwQixJQUFJQSxJQUFJQyxjQUFjLEVBQUU7d0JBQ3RCLG9EQUFvRDt3QkFDcERWLElBQUlXLFNBQVMsR0FBRzt3QkFDaEJYLElBQUlZLFFBQVEsQ0FBQ0gsSUFBSUksQ0FBQyxFQUFFSixJQUFJSyxDQUFDLEVBQUVMLElBQUliLEtBQUssRUFBRWEsSUFBSVosTUFBTTt3QkFFaEQsdUJBQXVCO3dCQUN2QixNQUFNa0IsV0FBV0MsS0FBS0MsR0FBRyxDQUFDLElBQUlELEtBQUtFLEdBQUcsQ0FBQ1QsSUFBSVosTUFBTSxHQUFHLEtBQUs7d0JBQ3pERyxJQUFJbUIsSUFBSSxHQUFHLEdBQVksT0FBVEosVUFBUzt3QkFDdkJmLElBQUlXLFNBQVMsR0FBRzt3QkFDaEJYLElBQUlvQixZQUFZLEdBQUc7d0JBRW5CLHNDQUFzQzt3QkFDdEMsTUFBTUMsUUFBUVosSUFBSUMsY0FBYyxDQUFDWSxLQUFLLENBQUM7d0JBQ3ZDLElBQUlDLE9BQU87d0JBQ1gsSUFBSUMsVUFBVWYsSUFBSUssQ0FBQyxHQUFHO3dCQUN0QixNQUFNVyxhQUFhVixXQUFXO3dCQUM5QixNQUFNVyxXQUFXakIsSUFBSWIsS0FBSyxHQUFHO3dCQUU3QixJQUFLLElBQUkrQixJQUFJLEdBQUdBLElBQUlOLE1BQU1kLE1BQU0sRUFBRW9CLElBQUs7NEJBQ3JDLE1BQU1DLFdBQVdMLE9BQU9GLEtBQUssQ0FBQ00sRUFBRSxHQUFHOzRCQUNuQyxNQUFNRSxVQUFVN0IsSUFBSThCLFdBQVcsQ0FBQ0Y7NEJBRWhDLElBQUlDLFFBQVFqQyxLQUFLLEdBQUc4QixZQUFZQyxJQUFJLEdBQUc7Z0NBQ3JDM0IsSUFBSStCLFFBQVEsQ0FBQ1IsTUFBTWQsSUFBSUksQ0FBQyxHQUFHLEdBQUdXO2dDQUM5QkQsT0FBT0YsS0FBSyxDQUFDTSxFQUFFLEdBQUc7Z0NBQ2xCSCxXQUFXQzs0QkFDYixPQUFPO2dDQUNMRixPQUFPSzs0QkFDVDt3QkFDRjt3QkFDQTVCLElBQUkrQixRQUFRLENBQUNSLE1BQU1kLElBQUlJLENBQUMsR0FBRyxHQUFHVztvQkFDaEM7Z0JBQ0Y7WUFDRjtZQUVBL0IsZUFBZTtRQUNqQjtRQUVBUyxJQUFJOEIsT0FBTyxHQUFHO1lBQ1pDLFFBQVFDLEtBQUssQ0FBQztRQUNoQjtRQUVBaEMsSUFBSWlDLEdBQUcsR0FBRy9DO0lBQ1osR0FBRztRQUFDQTtRQUFVQztRQUFlQztLQUFhO0lBRTFDLHFCQUNFLDhEQUFDOEM7UUFBSUMsV0FBVTs7MEJBQ2IsOERBQUN0QztnQkFDQ3VDLEtBQUsvQztnQkFDTDhDLFdBQVU7Z0JBQ1ZFLE9BQU87b0JBQUVDLFNBQVNoRCxjQUFjLFVBQVU7Z0JBQU87Ozs7OztZQUVsRCxDQUFDQSw2QkFDQSw4REFBQzRDO2dCQUFJQyxXQUFVOzBCQUFhOzs7Ozs7Ozs7Ozs7QUFJcEM7R0FwRndCbEQ7S0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vY29tcG9uZW50cy9UcmFuc2xhdGVkSW1hZ2VPdmVybGF5LnRzeD81YTg1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyB1c2VFZmZlY3QsIHVzZVJlZiwgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCdcblxudHlwZSBCb3VuZGluZ0JveCA9IHtcbiAgeDogbnVtYmVyXG4gIHk6IG51bWJlclxuICB3aWR0aDogbnVtYmVyXG4gIGhlaWdodDogbnVtYmVyXG4gIHRleHQ6IHN0cmluZ1xuICB0cmFuc2xhdGVkVGV4dD86IHN0cmluZ1xufVxuXG50eXBlIFByb3BzID0ge1xuICBpbWFnZVVybDogc3RyaW5nXG4gIGJvdW5kaW5nQm94ZXM6IEJvdW5kaW5nQm94W11cbiAgc2hvd09yaWdpbmFsPzogYm9vbGVhblxufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBUcmFuc2xhdGVkSW1hZ2VPdmVybGF5KHsgaW1hZ2VVcmwsIGJvdW5kaW5nQm94ZXMsIHNob3dPcmlnaW5hbCA9IGZhbHNlIH06IFByb3BzKSB7XG4gIGNvbnN0IGNhbnZhc1JlZiA9IHVzZVJlZjxIVE1MQ2FudmFzRWxlbWVudD4obnVsbClcbiAgY29uc3QgW2ltYWdlTG9hZGVkLCBzZXRJbWFnZUxvYWRlZF0gPSB1c2VTdGF0ZShmYWxzZSlcbiAgY29uc3QgW2ltYWdlRGltZW5zaW9ucywgc2V0SW1hZ2VEaW1lbnNpb25zXSA9IHVzZVN0YXRlKHsgd2lkdGg6IDAsIGhlaWdodDogMCB9KVxuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKCFpbWFnZVVybCB8fCAhY2FudmFzUmVmLmN1cnJlbnQpIHJldHVyblxuXG4gICAgY29uc3QgY2FudmFzID0gY2FudmFzUmVmLmN1cnJlbnRcbiAgICBjb25zdCBjdHggPSBjYW52YXMuZ2V0Q29udGV4dCgnMmQnKVxuICAgIGlmICghY3R4KSByZXR1cm5cblxuICAgIGNvbnN0IGltZyA9IG5ldyBJbWFnZSgpXG4gICAgaW1nLmNyb3NzT3JpZ2luID0gJ2Fub255bW91cydcbiAgICBcbiAgICBpbWcub25sb2FkID0gKCkgPT4ge1xuICAgICAgLy8gU2V0IGNhbnZhcyBzaXplIHRvIG1hdGNoIGltYWdlXG4gICAgICBjYW52YXMud2lkdGggPSBpbWcud2lkdGhcbiAgICAgIGNhbnZhcy5oZWlnaHQgPSBpbWcuaGVpZ2h0XG4gICAgICBzZXRJbWFnZURpbWVuc2lvbnMoeyB3aWR0aDogaW1nLndpZHRoLCBoZWlnaHQ6IGltZy5oZWlnaHQgfSlcblxuICAgICAgLy8gRHJhdyB0aGUgb3JpZ2luYWwgaW1hZ2VcbiAgICAgIGN0eC5kcmF3SW1hZ2UoaW1nLCAwLCAwKVxuXG4gICAgICBpZiAoIXNob3dPcmlnaW5hbCAmJiBib3VuZGluZ0JveGVzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgLy8gT3ZlcmxheSB0cmFuc2xhdGVkIHRleHRcbiAgICAgICAgYm91bmRpbmdCb3hlcy5mb3JFYWNoKGJveCA9PiB7XG4gICAgICAgICAgaWYgKGJveC50cmFuc2xhdGVkVGV4dCkge1xuICAgICAgICAgICAgLy8gRmlsbCB0aGUgb3JpZ2luYWwgdGV4dCBhcmVhIHdpdGggd2hpdGUgdG8gbWFzayBpdFxuICAgICAgICAgICAgY3R4LmZpbGxTdHlsZSA9ICdyZ2JhKDI1NSwgMjU1LCAyNTUsIDAuOTUpJ1xuICAgICAgICAgICAgY3R4LmZpbGxSZWN0KGJveC54LCBib3gueSwgYm94LndpZHRoLCBib3guaGVpZ2h0KVxuXG4gICAgICAgICAgICAvLyBEcmF3IHRyYW5zbGF0ZWQgdGV4dFxuICAgICAgICAgICAgY29uc3QgZm9udFNpemUgPSBNYXRoLm1heCgxMiwgTWF0aC5taW4oYm94LmhlaWdodCAqIDAuNywgMjQpKVxuICAgICAgICAgICAgY3R4LmZvbnQgPSBgJHtmb250U2l6ZX1weCBBcmlhbCwgc2Fucy1zZXJpZmBcbiAgICAgICAgICAgIGN0eC5maWxsU3R5bGUgPSAnYmxhY2snXG4gICAgICAgICAgICBjdHgudGV4dEJhc2VsaW5lID0gJ3RvcCdcblxuICAgICAgICAgICAgLy8gV29yZCB3cmFwIHRoZSB0ZXh0IGlmIGl0J3MgdG9vIGxvbmdcbiAgICAgICAgICAgIGNvbnN0IHdvcmRzID0gYm94LnRyYW5zbGF0ZWRUZXh0LnNwbGl0KCcgJylcbiAgICAgICAgICAgIGxldCBsaW5lID0gJydcbiAgICAgICAgICAgIGxldCB5T2Zmc2V0ID0gYm94LnkgKyAyXG4gICAgICAgICAgICBjb25zdCBsaW5lSGVpZ2h0ID0gZm9udFNpemUgKiAxLjJcbiAgICAgICAgICAgIGNvbnN0IG1heFdpZHRoID0gYm94LndpZHRoIC0gNFxuXG4gICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHdvcmRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgIGNvbnN0IHRlc3RMaW5lID0gbGluZSArIHdvcmRzW2ldICsgJyAnXG4gICAgICAgICAgICAgIGNvbnN0IG1ldHJpY3MgPSBjdHgubWVhc3VyZVRleHQodGVzdExpbmUpXG4gICAgICAgICAgICAgIFxuICAgICAgICAgICAgICBpZiAobWV0cmljcy53aWR0aCA+IG1heFdpZHRoICYmIGkgPiAwKSB7XG4gICAgICAgICAgICAgICAgY3R4LmZpbGxUZXh0KGxpbmUsIGJveC54ICsgMiwgeU9mZnNldClcbiAgICAgICAgICAgICAgICBsaW5lID0gd29yZHNbaV0gKyAnICdcbiAgICAgICAgICAgICAgICB5T2Zmc2V0ICs9IGxpbmVIZWlnaHRcbiAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBsaW5lID0gdGVzdExpbmVcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY3R4LmZpbGxUZXh0KGxpbmUsIGJveC54ICsgMiwgeU9mZnNldClcbiAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgICB9XG5cbiAgICAgIHNldEltYWdlTG9hZGVkKHRydWUpXG4gICAgfVxuXG4gICAgaW1nLm9uZXJyb3IgPSAoKSA9PiB7XG4gICAgICBjb25zb2xlLmVycm9yKCdGYWlsZWQgdG8gbG9hZCBpbWFnZSBmb3Igb3ZlcmxheScpXG4gICAgfVxuXG4gICAgaW1nLnNyYyA9IGltYWdlVXJsXG4gIH0sIFtpbWFnZVVybCwgYm91bmRpbmdCb3hlcywgc2hvd09yaWdpbmFsXSlcblxuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPVwicmVsYXRpdmUgdy1mdWxsIGgtZnVsbCBmbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNlbnRlciBiZy1ncmF5LTEwMFwiPlxuICAgICAgPGNhbnZhc1xuICAgICAgICByZWY9e2NhbnZhc1JlZn1cbiAgICAgICAgY2xhc3NOYW1lPVwibWF4LXctZnVsbCBtYXgtaC1mdWxsIG9iamVjdC1jb250YWluXCJcbiAgICAgICAgc3R5bGU9e3sgZGlzcGxheTogaW1hZ2VMb2FkZWQgPyAnYmxvY2snIDogJ25vbmUnIH19XG4gICAgICAvPlxuICAgICAgeyFpbWFnZUxvYWRlZCAmJiAoXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidGV4dC1ibGFja1wiPkxvYWRpbmcgaW1hZ2UuLi48L2Rpdj5cbiAgICAgICl9XG4gICAgPC9kaXY+XG4gIClcbn1cbiJdLCJuYW1lcyI6WyJSZWFjdCIsInVzZUVmZmVjdCIsInVzZVJlZiIsInVzZVN0YXRlIiwiVHJhbnNsYXRlZEltYWdlT3ZlcmxheSIsImltYWdlVXJsIiwiYm91bmRpbmdCb3hlcyIsInNob3dPcmlnaW5hbCIsImNhbnZhc1JlZiIsImltYWdlTG9hZGVkIiwic2V0SW1hZ2VMb2FkZWQiLCJpbWFnZURpbWVuc2lvbnMiLCJzZXRJbWFnZURpbWVuc2lvbnMiLCJ3aWR0aCIsImhlaWdodCIsImN1cnJlbnQiLCJjYW52YXMiLCJjdHgiLCJnZXRDb250ZXh0IiwiaW1nIiwiSW1hZ2UiLCJjcm9zc09yaWdpbiIsIm9ubG9hZCIsImRyYXdJbWFnZSIsImxlbmd0aCIsImZvckVhY2giLCJib3giLCJ0cmFuc2xhdGVkVGV4dCIsImZpbGxTdHlsZSIsImZpbGxSZWN0IiwieCIsInkiLCJmb250U2l6ZSIsIk1hdGgiLCJtYXgiLCJtaW4iLCJmb250IiwidGV4dEJhc2VsaW5lIiwid29yZHMiLCJzcGxpdCIsImxpbmUiLCJ5T2Zmc2V0IiwibGluZUhlaWdodCIsIm1heFdpZHRoIiwiaSIsInRlc3RMaW5lIiwibWV0cmljcyIsIm1lYXN1cmVUZXh0IiwiZmlsbFRleHQiLCJvbmVycm9yIiwiY29uc29sZSIsImVycm9yIiwic3JjIiwiZGl2IiwiY2xhc3NOYW1lIiwicmVmIiwic3R5bGUiLCJkaXNwbGF5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/TranslatedImageOverlay.tsx\n"));

/***/ })

});